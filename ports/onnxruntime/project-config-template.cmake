@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# sync with portfile.cmake and onnxruntime_vcpkg_deps.cmake ...
find_dependency(absl)
find_dependency(re2)
if("@onnxruntime_BUILD_UNIT_TESTS@")
  find_dependency(GTest)
endif()
if("@onnxruntime_BUILD_BENCHMARKS@")
  find_dependency(benchmark)
endif()
find_dependency(flatbuffers)
find_dependency(Protobuf)

find_dependency(date)
find_dependency(Boost)
find_dependency(nlohmann_json)
if("@onnxruntime_ENABLE_CPUINFO@")
  find_dependency(cpuinfo)
endif()
if(NOT WIN32)
  find_dependency(unofficial-nsync)
endif()
find_dependency(Microsoft.GSL)
find_dependency(ONNX)
find_dependency(Eigen3)
find_dependency(wil)
if("@onnxruntime_USE_XNNPACK@")
  find_dependency(cpuinfo)
endif()
if("@onnxruntime_USE_MIMALLOC@")
  find_dependency(mimalloc)
endif()
if("@onnxruntime_ENABLE_ATEN@")
  find_dependency(dlpack)
endif()
if("@onnxruntime_ENABLE_TRAINING@ OR @onnxruntime_ENABLE_TRAINING_APIS@")
  find_dependency(cxxopts)
endif()
if("@onnxruntime_USE_CUDA@")
  find_dependency(CUDAToolkit)
  find_dependency(NvidiaCutlass)
endif()
if("@onnxruntime_USE_OPENVINO@")
  find_dependency(OpenVINO)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/onnxruntimeTargets.cmake")
