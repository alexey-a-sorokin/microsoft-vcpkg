diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6d7ca84..b72646f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -129,6 +129,7 @@ if(ONNX_BUILD_TESTS)
   endif()
 endif()
 
+find_package(protobuf CONFIG REQUIRED)
 if((ONNX_USE_LITE_PROTO AND TARGET protobuf::libprotobuf-lite) OR ((NOT ONNX_USE_LITE_PROTO) AND TARGET protobuf::libprotobuf))
   # Sometimes we need to use protoc compiled for host architecture while linking
   # libprotobuf against target architecture. See https://github.com/caffe2/caffe
@@ -711,6 +712,27 @@ install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/onnx
         FILES_MATCHING
         PATTERN "*.h")
 
+# install protobuf files
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx-data.proto
+              ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx-data.proto3
+              ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx-ml.proto
+              ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx-ml.proto3
+              ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx-operators-ml.proto
+              ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx-operators-ml.proto3
+        DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/onnx
+)
+# install python files
+if(BUILD_ONNX_PYTHON)
+  install(FILES ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx_data_pb.py
+                ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx_data_pb2.py
+                ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx_ml_pb2.py
+                ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx_operators_ml_pb2.py
+                ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx_operators_pb.py
+                ${CMAKE_CURRENT_BINARY_DIR}/onnx/onnx_pb.py
+          DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/onnx
+  )
+endif()
+
 configure_file(
   ${PROJECT_SOURCE_DIR}/cmake/ONNXConfigVersion.cmake.in
   ${PROJECT_BINARY_DIR}/ONNXConfigVersion.cmake
diff --git a/cmake/ONNXConfig.cmake.in b/cmake/ONNXConfig.cmake.in
index d588f8a..dbd4398 100644
--- a/cmake/ONNXConfig.cmake.in
+++ b/cmake/ONNXConfig.cmake.in
@@ -6,9 +6,8 @@
 # library version information
 set(ONNX_VERSION "@ONNX_VERSION@")
 
-list(APPEND CMAKE_PREFIX_PATH "@PROTOBUF_DIR@")
-set(Protobuf_INCLUDE_DIR "@PROTOBUF_INCLUDE_DIR@")
-find_package(Protobuf REQUIRED)
+include(CMakeFindDependencyMacro)
+find_dependency(protobuf CONFIG)
 
 # import targets
 include ("${CMAKE_CURRENT_LIST_DIR}/ONNXTargets.cmake")
